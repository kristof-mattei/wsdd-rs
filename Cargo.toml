[package]
name = "wsdd-rs"
# don't change this, it's updated before an actual build by update-version.sh
version = "0.0.0-development"
edition = "2021"
rust-version = "1.81.0"
authors = ["Kristof Mattei"]
description = "Rust seed application"
license-file = "LICENSE"
categories = ["starter", "seed"]
keywords = ["integrity", "seed", "starter", "docker", "release"]
repository = "https://github.com/kristof-mattei/wsdd-rs"

[lints.clippy]
# don't stop from compiling / running
all = "warn"
pedantic = "warn"
cargo = "warn"
# this one causes confusion when combining variables (`foo`) and
# dereferenced variables (`foo.bar`). The latter cannot be inlined
# so we don't inline anything
uninlined-format-args = { level = "allow", priority = 127 }

[lints.rust]
let_underscore_drop = { level = "deny", priority = 127 }
non_ascii_idents = { level = "deny", priority = 127 }

[profile.dev.package.backtrace]
opt-level = 3

[features]
coverage = []

[dependencies]
bytemuck = { version = "1.18.0", features = ["derive"] }
clap = { version = "4.5.20", features = ["cargo", "string", "derive"] }
color-eyre = { git = "https://github.com/eyre-rs/eyre", rev = "2dc0688d33a487009e8bc3222cbab135261383b0", features = [
    "track-caller",
] }
dotenvy = "0.15.7"
libc = "0.2.159"
mockall = "0.13.0"
mockall_double = "0.3.1"
once_cell = "1.20.2"
rand = "0.8.5"
socket2 = "0.5.7"
time = { version = "0.3.36", features = ["formatting"] }
tokio = { version = "1.40.0", features = [
    "rt-multi-thread",
    "macros",
    "time",
    "signal",
    "net",
    "sync",
    "io-util",
] }
tokio-util = "0.7.12"
tracing = "0.1.40"
tracing-error = "0.2.0"
tracing-subscriber = { version = "0.3.18", features = [
    "env-filter",
    "time",
    "tracing-log",
] }
uuid = { version = "1.10.0", features = ["v4", "v5"] }
zerocopy = { version = "0.8.5", features = ["derive"] }

# We compile the Docker container with musl to get a static library. Smaller, faster.
# BUT that means that we need to include openssl
# Documentation on the syntax:
# https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#platform-specific-dependencies
[target.'cfg(all(target_arch = "x86_64", target_os="linux", target_env="musl"))'.dependencies]
# openssl = { version = "0.10.36", features = ["vendored"] }
